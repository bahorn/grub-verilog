/* partially generated by perplexity, with changes */
module rule110 #(parameter WIDTH = 32) (
    input wire clk,
    input wire reset,
    input wire [WIDTH-1:0] init_state,
    output wire [WIDTH-1:0] state
);
    reg has_been_set;
    reg [WIDTH-1:0] current_state;

    initial begin
        has_been_set = 0;
    end

    always @(posedge clk) begin
        if (!has_been_set) begin
            current_state <= init_state;
            has_been_set <= 1;
        end else if (reset) begin
            current_state <= init_state;
            has_been_set <= 0;
        end else begin
            current_state <= {current_state[WIDTH-2:0], current_state[WIDTH-1]};
            for (int i = 0; i < WIDTH; i++) begin
                current_state[i] <= (current_state[(i-1+WIDTH) % WIDTH] & current_state[i] & ~current_state[(i+1) % WIDTH]) |
                                    (~current_state[(i-1+WIDTH)%WIDTH] & (current_state[i] | current_state[(i+1) % WIDTH]));
            end
        end
    end

    assign state = current_state;

endmodule
